// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"oxylabs-homework/internal/adapters/quickclient/handlers"
	"oxylabs-homework/internal/drivers/wireproviders"
)

// Injectors from wire.go:

func initialize(ctx context.Context) (application, error) {
	options, err := wireproviders.NewOptions()
	if err != nil {
		return application{}, err
	}
	config, err := wireproviders.NewConfig(options)
	if err != nil {
		return application{}, err
	}
	loggerConfig := config.Logger
	zapConfig, err := wireproviders.NewLoggerConfig(loggerConfig)
	if err != nil {
		return application{}, err
	}
	logger, err := wireproviders.NewLoggerFromConfig(zapConfig)
	if err != nil {
		return application{}, err
	}
	serverConfig := config.Server
	tlsConfig := config.TLS
	config2, err := wireproviders.NewTLSConfig(tlsConfig)
	if err != nil {
		return application{}, err
	}
	publisherClient, err := wireproviders.NewPublisherQUICClientFromConfig(ctx, serverConfig, config2)
	if err != nil {
		return application{}, err
	}
	publisherHandler := handlers.NewPublisherHandler(logger, publisherClient)
	mainApplication := newApplication(logger, publisherHandler)
	return mainApplication, nil
}
